#summary Discussion notes.

= Plan =

  # Write the permutation function.
   * Given a string, generate the next permutation.
   * Increment the right-most char, then roll over when necessary.
   * OR Partition the domain into n sections.

  # Start with a simple solution.

  # Implement a sequential solution first in C for comparison purposes.



bba = b00 + ba
    = 

----
  # Main CUDA {{{__global__ function - md5Hash(char* message, unit* digest(4))}}}
  # {{{__device__ void prepare(char* message, uint* message (16x))}}}
  # {{{__device__ void hash(uint* message (16x), uint* digest(4))}}}
   * hash divides the message into 64 byte chunks and calls transform() on each chunk.
  # {{{__device__ void transform(uint* chunk (16), uint* digest (4))}}}
   * transform performs magic on the chunk and puts result into digest.
Once hash finishes, digest will contain the final MD5 digest.